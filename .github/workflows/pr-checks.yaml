name: Validate PR

on:
  pull_request:
    branches:
      - main

jobs:
  validate:
    name: validate PR
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
          aws --version

      - name: Install Taskfile
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ vars.TERRAFORM_VERSION }}

      - name: Run validate
        run: |
          echo "Terraform Format Check"
          terraform fmt -check -recursive || exit 1
          echo "Terraform Init"
          terraform init || exit 1
          echo "Terraform Validate"
          terraform validate || exit 1

      - name: Run tests
        run: |
          task apply 
          task test
          task destroy

      - name: Comment PR with Terraform status
        uses: actions/github-script@v7
        env:
          FORMAT_CHECK: "Terraform Format Check"
          INIT_CHECK: "Terraform Init"
          VALIDATE_CHECK: "Terraform Validate"
          TEST_CHECK: "Test Check"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Validation Results:

            ${{ env.FORMAT_CHECK }} ✅
            ${{ env.INIT_CHECK }} ✅
            ${{ env.VALIDATE_CHECK }} ✅
            ${{ env.TEST_CHECK }} ✅

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
            

